---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: vscode-root-ephemeral
  annotations:
    openshift.io/display-name: VisualStudio Code with root user (Ephemeral)
    description: |-
      Start VisualStudio Code server with the 'coder' user which has root (sudo) permissions.
      
      Python and Java 11 already installed. You can install packages with 'apt-get' after starting the server.

      Deployed using the code-server Docker image: https://github.com/orgs/MaastrichtU-IDS/packages/container/package/vscode-server

      ðŸ¦‹ Data will be lost when the application is deleted or restarts.

      ðŸ”’ You need root containers enabled (aka. anyuid) in your project to start this application.
    iconClass: icon-kubevirt
    tags: visualstudio,vscode,root,ephemeral
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-vscode
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    template.openshift.io/bindable: 'false'
labels:
  template: vscode-root-ephemeral
parameters:
- name: APPLICATION_NAME
  displayName: Application name
  description: Must be unique in the project. It will be used to generate the application
    URL.
  value: vscode
  required: true
- name: APPLICATION_IMAGE
  displayName: Docker image for the application
  description: Use images based on codercom/code-server:latest
  value: ghcr.io/maastrichtu-ids/vscode-server:latest
  required: true
- name: PASSWORD
  displayName: Password
  description: The password to access the VSCode application
  value: mypassword
  # from: "[a-zA-Z0-9]{16}"
  # generate: expression
  required: true
- name: MEMORY_LIMIT
  displayName: Memory limit
  description: Maximum RAM available for the VSCode application.
  value: "5Gi"
  required: true
- name: CPU_LIMIT
  displayName: CPU limit
  description: Number of CPUs available for the VSCode application (in millicore, 1 CPU = 1000m).
  value: "2000m"
  required: true
objects:
# - apiVersion: v1
#   kind: Secret
#   metadata:
#     annotations:
#       template.openshift.io/expose-password: "{.data['application-password']}"
#     name: "${APPLICATION_NAME}"
#     labels:
#           app: "${APPLICATION_NAME}"
#   stringData:
#     application-password: "${PASSWORD}"

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    # - type: ImageChange
    #   imageChangeParams:
    #     automatic: true
    #     containerNames:
    #     - vscode-container
    #     from:
    #       kind: ImageStreamTag
    #       name: vscode-imagestream
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
          deploymentconfig: "${APPLICATION_NAME}"
      spec:
        serviceAccountName: anyuid
        nodeSelector:
          dsri.unimaas.nl/cpu: 'true'
        volumes:
        - name: data
          emptyDir: {}
        containers:
        - name: vscode-container
          image: ${APPLICATION_IMAGE}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
          volumeMounts:
          - name: data
            mountPath: "/home/coder/project"
          env:
          - name: PASSWORD
            value: ${PASSWORD}
          #   valueFrom:
          #     secretKeyRef:
          #       key: application-password
          #       name: "${APPLICATION_NAME}"
          # - name: GIT_URL
          #   value: "${GIT_REPOSITORY_URL}"
        automountServiceAccountToken: false

- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    host: ''
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
