---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: rstudio-root-ephemeral
  annotations:
    openshift.io/display-name: RStudio with root user (Ephemeral)
    description: |-
      Start RStudio with the 'rstudio' user which has root (sudo) permissions.
      
      Uses rocker RStudio image: https://hub.docker.com/r/rocker/rstudio/

      ðŸ¦‹ Data will be lost when the application is deleted or restarts.

      ðŸ”’ You need root containers enabled (aka. anyuid) in your project to start this application.
    iconClass: icon-play
    tags: R,rstudio,root,ephemeral
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-services#rstudio
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    template.openshift.io/bindable: 'false'
labels:
  template: rstudio-root-ephemeral
parameters:
- name: APPLICATION_NAME
  displayName: Application name
  description: Must be unique in the project. It will be used to generate the application
    URL.
  value: rstudio
  required: true
- name: APPLICATION_USERNAME
  displayName: RStudio username
  description: Default user is rstudio.
  value: rstudio
  required: true
- name: PASSWORD
  displayName: RStudio password
  description: The password of the RStudio user. 
  from: "[a-zA-Z0-9]{16}"
  generate: expression
  required: true
# - name: APPLICATION_MEMORY
#   displayName: Application memory
#   description: Maximum RAM available for the application.
#   value: 5Gi
#   required: true
- name: ENABLE_ROOT
  displayName: Enable Root
  description: Enabled by default. If false, the RStudio user does not have access
    to root in the UI, such that users cannot install binary libraries with apt-get
    without first entering the container.
  value: 'TRUE'
  required: true
  
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-password: "{.data['application-password']}"
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  stringData:
    application-password: "${PASSWORD}"

- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: rstudio-root-ephemeral-${APPLICATION_NAME}
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: rocker/rstudio:latest
    lookupPolicy:
      local: true

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - rstudio-container
        from:
          kind: ImageStreamTag
          name: rstudio-root-ephemeral-${APPLICATION_NAME}:latest
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
          deploymentconfig: "${APPLICATION_NAME}"
      spec:
        serviceAccountName: anyuid
        nodeSelector:
          dsri.unimaas.nl/cpu: 'true'
        containers:
        - name: rstudio-container
          image: rstudio-root-ephemeral-${APPLICATION_NAME}:latest
          ports:
          - containerPort: 8787
            protocol: TCP
          # resources:
          #   limits:
          #     cpu: '64'
          #     memory: 200Gi
          #   requests:
          #     cpu: '2'
          #     memory: 4Gi
          env:
          - name: USER
            value: "${APPLICATION_USERNAME}"
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                key: application-password
                name: "${APPLICATION_NAME}"
          - name: ROOT
            value: "${ENABLE_ROOT}"
        automountServiceAccountToken: false

- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: 8787-tcp
      protocol: TCP
      port: 8787
      targetPort: 8787
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"

- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    host: ''
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    port:
      targetPort: 8787-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
